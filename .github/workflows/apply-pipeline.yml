name: Terraform Apply Pipeline

on:
  push:
    branches:
      - main
      
jobs:
  Apply:
    runs-on: ubuntu-latest

    env:
      TF_VAR_mysql_user: ${{ secrets.TF_VAR_MYSQL_USER }}
      TF_VAR_mysql_password: ${{ secrets.TF_VAR_MYSQL_PASSWORD }}
      TF_VAR_mysql_server_name: ${{ secrets.TF_VAR_MYSQL_SERVER_NAME }}
      TF_VAR_private_dns_zone_name: ${{ secrets.TF_VAR_PRIVATE_DNS_ZONE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.7.2

      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.TF_ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TF_ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TF_ARM_TENANT_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"
                  

      - name: Terraform Plan
        id: plan
        env:
          ARM_CLIENT_ID: ${{ secrets.TF_ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TF_ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TF_ARM_TENANT_ID }}
        run: terraform plan -no-color
      
      - name: Terraform Apply
        id: apply
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve
